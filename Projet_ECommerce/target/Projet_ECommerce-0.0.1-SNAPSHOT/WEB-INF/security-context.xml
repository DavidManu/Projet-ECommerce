<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

<!-- declaration du bean dataSource -->
	<context:property-placeholder location="classpath*:data-source.properties" />
	<!-- Commit -->
	<bean id="dataSourceBean2"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.mdp}" />
	</bean>


	<!-- declaration des URL protégées -->
	<security:http>
		<!-- Les URL protégées et les autorisations -->
		<security:intercept-url pattern="/authentication/adminCatProd/**"
			access="ROLE_ADMIN_CAT" />
		<security:intercept-url pattern="/authentication/adminProd/**"
			access="ROLE_ADMIN_PROD" />

		<!-- formulaire -->
		<security:form-login login-page="/login"
			authentication-failure-url="/echec" />

		<!-- Pour se deconnecter -->
		<security:logout logout-success-url="/logout" />

		<!-- Pour les acces non autorisés -->
		<security:access-denied-handler
			error-page="/denied" />
	</security:http>

	<!-- declaration des authentification -->
	<security:authentication-manager>
		<security:authentication-provider>
			<!-- Utilisation de la base de données pour récupérer l'identifiant, le 
				mdp et Roles -->
			<security:jdbc-user-service
				data-source-ref="dataSourceBean2"
				users-by-username-query="select userName,password,actived,role_id from admins where userName=?"
				authorities-by-username-query="select a.userName,r.roleName from admins a,roles r where a.role_id=r.id_r and a.userName=?" />
			<!-- users-by-username-query pour l'authentification -->
			<!-- authorities-by-username-query pour l'autorisation -->
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
